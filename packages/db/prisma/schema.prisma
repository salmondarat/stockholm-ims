generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid()) @db.Uuid
  email        String   @unique
  name         String?
  role         String   @default("MEMBER") // ADMIN | STAFF | MEMBER
  passwordHash String   @map("password_hash")
  createdAt    DateTime @default(now()) @map("created_at")

}

model Item {
  id                String   @id @default(uuid()) @db.Uuid
  name              String
  sku               String?
  quantity          Int      @default(0)
  location          String?
  condition         String?
  photoUrl          String?  @map("photo_url")
  tags              Json?
  // Pricing
  price             Decimal? @db.Decimal(10, 2)
  // Optional structured options (e.g., { color: ["red","blue"], size: ["S","M"] })
  options           Json?
  // Category (subcategory) assignment
  categoryId        String?  @db.Uuid @map("category_id")
  category          Category? @relation(fields: [categoryId], references: [id])
  lowStockThreshold Int      @default(0) @map("low_stock_threshold")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  // New: related media items (images, etc.)
  media             ItemMedia[]
  // New: normalized variants (attrs + sku + qty)
  variants          ItemVariant[]

  @@map("items")
}

model Category {
  id         String     @id @default(uuid()) @db.Uuid
  name       String
  slug       String     @unique
  parentId   String?    @db.Uuid @map("parent_id")
  parent     Category?  @relation("CategoryChildren", fields: [parentId], references: [id])
  children   Category[] @relation("CategoryChildren")
  items      Item[]
  createdAt  DateTime   @default(now()) @map("created_at")

  @@index([parentId], map: "idx_categories_parent_id")
  @@map("categories")
}
model ItemMedia {
  id         String   @id @default(uuid()) @db.Uuid
  itemId     String   @db.Uuid @map("item_id")
  item       Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  url        String
  contentType String? @map("content_type")
  position   Int      @default(0)
  createdAt  DateTime @default(now()) @map("created_at")

  @@index([itemId], map: "idx_item_media_item_id")
  @@map("item_media")
}

model ItemVariant {
  id         String   @id @default(uuid()) @db.Uuid
  itemId     String   @db.Uuid @map("item_id")
  item       Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  sku        String?
  qty        Int      @default(0)
  attrs      Json     @default("{}")
  createdAt  DateTime @default(now()) @map("created_at")

  @@index([itemId], map: "idx_item_variants_item_id")
  @@map("item_variants")
}

// Removed unused tables not present in DB migrations to match current app
