name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  typecheck_lint_format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Enable Corepack
        run: corepack enable

      - name: Prepare pnpm (Corepack)
        run: corepack prepare pnpm@9.0.0 --activate

      - name: Debug pnpm version
        run: pnpm -v

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Turbo cache
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            apps/**/.next/cache
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/package.json', 'pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Lint + Typecheck (changed only)
        run: pnpm turbo run lint typecheck --filter=...[origin/main] --cache-dir=.turbo
        env:
          SKIP_ENV_VALIDATION: '1'

      - name: Format check (Prettier, changed files only)
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            RANGE="${{ github.base_ref }}..."
          else
            RANGE="HEAD^..."
          fi
          CHANGED=$(git diff --name-only --diff-filter=ACMRTUXB $RANGE | rg '\\.(ts|tsx|md)$' || true)
          if [[ -z "$CHANGED" ]]; then
            echo "No TS/TSX/MD changes. Skipping Prettier check."
          else
            echo "Checking formatting for changed files:"; echo "$CHANGED"
            pnpm prettier --check $CHANGED
          fi

      # Full typecheck fallback (when origin/main is unavailable, e.g. forks)
      - name: Typecheck (fallback)
        if: failure() && github.event_name == 'pull_request'
        run: pnpm -r --parallel typecheck
        env:
          SKIP_ENV_VALIDATION: '1'
